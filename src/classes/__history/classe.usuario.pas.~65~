unit classe.usuario;

interface

  uses
    interfaces.usuario, System.SysUtils, FMX.Dialogs,
    interfaces.conexao.firedac;

  type
    TUsuario = class(TInterfacedObject, iUsuario)
      private
        FQuery: iQuery;
        FUser: string;
        FPassword: string;
      public
        constructor Create;
        destructor Destroy; override;
        class function New: iUsuario;
        function User(aValue: string): iUsuario; overload;
        function User: string; overload;
        function Passoword(aValue: string): iUsuario; overload;
        function Passoword: string; overload;
        procedure Login;
    end;

implementation

  uses
    controller.factory.query;

  { TUsuario }

  constructor TUsuario.Create;
    begin
      FQuery := TFactoryQuery.New.query(nil);
    end;

  destructor TUsuario.Destroy;
    begin

      inherited;
    end;

  procedure TUsuario.Login;
    begin
      ShowMessage(FUser + ': ' + FPassword);
    end;

  class function TUsuario.New: iUsuario;
    begin
      Result := self.Create;
    end;

  function TUsuario.Passoword(aValue: string): iUsuario;
    begin
      Result := self;
      FPassword := aValue;
    end;

  function TUsuario.Passoword: string;
    begin
      Result := FPassword;
    end;

  function TUsuario.User(aValue: string): iUsuario;
    begin
      Result := self;
      FUser := aValue;
    end;

  function TUsuario.User: string;
    begin
      Result := FUser;
    end;

end.
